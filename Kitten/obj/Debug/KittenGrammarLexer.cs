//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\ddong\Documents\Visual Studio 2015\Projects\Kitten\Kitten\KittenGrammar.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Kitten {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class KittenGrammarLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, IntegerLiteral=23, BooleanLiteral=24, 
		StringLiteral=25, ID=26, WS=27;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "IntegerLiteral", "BooleanLiteral", 
		"StringLiteral", "ESC", "ID", "WS"
	};


	public KittenGrammarLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'var'", "'='", "'while'", "'('", "')'", "'if'", "'else'", "';'", 
		"'*'", "'/'", "'+'", "'-'", "'=='", "'>='", "'<='", "'!='", "'>'", "'<'", 
		"'['", "'}'", "'{'", "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, "IntegerLiteral", 
		"BooleanLiteral", "StringLiteral", "ID", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "KittenGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1D\x9E\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3"+
		"\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3"+
		"\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3"+
		"\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3"+
		"\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3"+
		"\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x6\x18w\n\x18\r\x18\xE"+
		"\x18x\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x5"+
		"\x19\x84\n\x19\x3\x1A\x3\x1A\x3\x1A\a\x1A\x89\n\x1A\f\x1A\xE\x1A\x8C\v"+
		"\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x5\x1B\x94\n\x1B\x3\x1C"+
		"\x6\x1C\x97\n\x1C\r\x1C\xE\x1C\x98\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x8A"+
		"\x2\x2\x1E\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11"+
		"\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2"+
		"\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19"+
		"\x31\x2\x1A\x33\x2\x1B\x35\x2\x2\x37\x2\x1C\x39\x2\x1D\x3\x2\x5\x3\x2"+
		"\x32;\x4\x2\x43\\\x63|\x5\x2\v\f\xF\xF\"\"\xA2\x2\x3\x3\x2\x2\x2\x2\x5"+
		"\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3"+
		"\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-"+
		"\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2"+
		"\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x3;\x3\x2\x2\x2\x5?\x3\x2\x2\x2\a"+
		"\x41\x3\x2\x2\x2\tG\x3\x2\x2\x2\vI\x3\x2\x2\x2\rK\x3\x2\x2\x2\xFN\x3\x2"+
		"\x2\x2\x11S\x3\x2\x2\x2\x13U\x3\x2\x2\x2\x15W\x3\x2\x2\x2\x17Y\x3\x2\x2"+
		"\x2\x19[\x3\x2\x2\x2\x1B]\x3\x2\x2\x2\x1D`\x3\x2\x2\x2\x1F\x63\x3\x2\x2"+
		"\x2!\x66\x3\x2\x2\x2#i\x3\x2\x2\x2%k\x3\x2\x2\x2\'m\x3\x2\x2\x2)o\x3\x2"+
		"\x2\x2+q\x3\x2\x2\x2-s\x3\x2\x2\x2/v\x3\x2\x2\x2\x31\x83\x3\x2\x2\x2\x33"+
		"\x85\x3\x2\x2\x2\x35\x93\x3\x2\x2\x2\x37\x96\x3\x2\x2\x2\x39\x9A\x3\x2"+
		"\x2\x2;<\ax\x2\x2<=\a\x63\x2\x2=>\at\x2\x2>\x4\x3\x2\x2\x2?@\a?\x2\x2"+
		"@\x6\x3\x2\x2\x2\x41\x42\ay\x2\x2\x42\x43\aj\x2\x2\x43\x44\ak\x2\x2\x44"+
		"\x45\an\x2\x2\x45\x46\ag\x2\x2\x46\b\x3\x2\x2\x2GH\a*\x2\x2H\n\x3\x2\x2"+
		"\x2IJ\a+\x2\x2J\f\x3\x2\x2\x2KL\ak\x2\x2LM\ah\x2\x2M\xE\x3\x2\x2\x2NO"+
		"\ag\x2\x2OP\an\x2\x2PQ\au\x2\x2QR\ag\x2\x2R\x10\x3\x2\x2\x2ST\a=\x2\x2"+
		"T\x12\x3\x2\x2\x2UV\a,\x2\x2V\x14\x3\x2\x2\x2WX\a\x31\x2\x2X\x16\x3\x2"+
		"\x2\x2YZ\a-\x2\x2Z\x18\x3\x2\x2\x2[\\\a/\x2\x2\\\x1A\x3\x2\x2\x2]^\a?"+
		"\x2\x2^_\a?\x2\x2_\x1C\x3\x2\x2\x2`\x61\a@\x2\x2\x61\x62\a?\x2\x2\x62"+
		"\x1E\x3\x2\x2\x2\x63\x64\a>\x2\x2\x64\x65\a?\x2\x2\x65 \x3\x2\x2\x2\x66"+
		"g\a#\x2\x2gh\a?\x2\x2h\"\x3\x2\x2\x2ij\a@\x2\x2j$\x3\x2\x2\x2kl\a>\x2"+
		"\x2l&\x3\x2\x2\x2mn\a]\x2\x2n(\x3\x2\x2\x2op\a\x7F\x2\x2p*\x3\x2\x2\x2"+
		"qr\a}\x2\x2r,\x3\x2\x2\x2st\a.\x2\x2t.\x3\x2\x2\x2uw\t\x2\x2\x2vu\x3\x2"+
		"\x2\x2wx\x3\x2\x2\x2xv\x3\x2\x2\x2xy\x3\x2\x2\x2y\x30\x3\x2\x2\x2z{\a"+
		"v\x2\x2{|\at\x2\x2|}\aw\x2\x2}\x84\ag\x2\x2~\x7F\ah\x2\x2\x7F\x80\a\x63"+
		"\x2\x2\x80\x81\an\x2\x2\x81\x82\au\x2\x2\x82\x84\ag\x2\x2\x83z\x3\x2\x2"+
		"\x2\x83~\x3\x2\x2\x2\x84\x32\x3\x2\x2\x2\x85\x8A\a$\x2\x2\x86\x89\x5\x35"+
		"\x1B\x2\x87\x89\v\x2\x2\x2\x88\x86\x3\x2\x2\x2\x88\x87\x3\x2\x2\x2\x89"+
		"\x8C\x3\x2\x2\x2\x8A\x8B\x3\x2\x2\x2\x8A\x88\x3\x2\x2\x2\x8B\x8D\x3\x2"+
		"\x2\x2\x8C\x8A\x3\x2\x2\x2\x8D\x8E\a$\x2\x2\x8E\x34\x3\x2\x2\x2\x8F\x90"+
		"\a^\x2\x2\x90\x94\a$\x2\x2\x91\x92\a^\x2\x2\x92\x94\a^\x2\x2\x93\x8F\x3"+
		"\x2\x2\x2\x93\x91\x3\x2\x2\x2\x94\x36\x3\x2\x2\x2\x95\x97\t\x3\x2\x2\x96"+
		"\x95\x3\x2\x2\x2\x97\x98\x3\x2\x2\x2\x98\x96\x3\x2\x2\x2\x98\x99\x3\x2"+
		"\x2\x2\x99\x38\x3\x2\x2\x2\x9A\x9B\t\x4\x2\x2\x9B\x9C\x3\x2\x2\x2\x9C"+
		"\x9D\b\x1D\x2\x2\x9D:\x3\x2\x2\x2\t\x2x\x83\x88\x8A\x93\x98\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Kitten
